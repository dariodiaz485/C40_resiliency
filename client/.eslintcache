[{"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/index.js":"1","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/App.jsx":"2","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/Map/Home.js":"3","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/TableList.jsx":"4","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/Dashboard.jsx":"5","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/NGOProfile.jsx":"6","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/pages/UserHome.jsx":"7","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/pages/Profile.jsx":"8","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/pages/UpdatePassword.jsx":"9","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/PrivateRoute.jsx":"10","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/Maps.jsx":"11","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/pages/ForgotPassword.jsx":"12","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/pages/Home.jsx":"13","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/pages/UserSignup.jsx":"14","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/pages/NGOSignup.jsx":"15","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/pages/Login.jsx":"16","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/context/AppContext.jsx":"17","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/Card/Card.jsx":"18","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/FormInputs/FormInputs.jsx":"19","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/variables/Variables.jsx":"20","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/UserCard/UserCard.jsx":"21","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/StatsCard/StatsCard.jsx":"22","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/CustomButton/CustomButton.jsx":"23","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/Map/Map.js":"24","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/history.js":"25","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/UserNavigation.jsx":"26","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/Map/client-config.js":"27","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/Logout.jsx":"28","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/Twilio.jsx":"29","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/Sidebar/Sidebar.jsx":"30","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/Navbars/AdminNavbar.jsx":"31","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/Navbars/AdminNavbarLinks.jsx":"32","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/routes.js":"33","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/Icons.jsx":"34","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/Typography.jsx":"35","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/Map/Home2.js":"36","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/Map/Map2.js":"37"},{"size":429,"mtime":1610379871878,"results":"38","hashOfConfig":"39"},{"size":1918,"mtime":1610386449286,"results":"40","hashOfConfig":"39"},{"size":370,"mtime":1610379871880,"results":"41","hashOfConfig":"39"},{"size":3293,"mtime":1610386609840,"results":"42","hashOfConfig":"39"},{"size":3708,"mtime":1610386449295,"results":"43","hashOfConfig":"39"},{"size":7374,"mtime":1610386449297,"results":"44","hashOfConfig":"39"},{"size":316,"mtime":1610386449293,"results":"45","hashOfConfig":"39"},{"size":3741,"mtime":1610321030725,"results":"46","hashOfConfig":"39"},{"size":2228,"mtime":1610321030726,"results":"47","hashOfConfig":"39"},{"size":426,"mtime":1610321030720,"results":"48","hashOfConfig":"39"},{"size":931,"mtime":1610379871880,"results":"49","hashOfConfig":"39"},{"size":1536,"mtime":1610379871878,"results":"50","hashOfConfig":"39"},{"size":795,"mtime":1610386449292,"results":"51","hashOfConfig":"39"},{"size":7253,"mtime":1610386449294,"results":"52","hashOfConfig":"39"},{"size":6118,"mtime":1610379871879,"results":"53","hashOfConfig":"39"},{"size":2128,"mtime":1610386449293,"results":"54","hashOfConfig":"39"},{"size":1657,"mtime":1610379871878,"results":"55","hashOfConfig":"39"},{"size":1676,"mtime":1610321030717,"results":"56","hashOfConfig":"39"},{"size":1286,"mtime":1610321030719,"results":"57","hashOfConfig":"39"},{"size":9693,"mtime":1610321030727,"results":"58","hashOfConfig":"39"},{"size":1578,"mtime":1610321030722,"results":"59","hashOfConfig":"39"},{"size":1526,"mtime":1610321030722,"results":"60","hashOfConfig":"39"},{"size":1346,"mtime":1610321030717,"results":"61","hashOfConfig":"39"},{"size":8375,"mtime":1610379871880,"results":"62","hashOfConfig":"39"},{"size":87,"mtime":1610321030723,"results":"63","hashOfConfig":"39"},{"size":790,"mtime":1610386449292,"results":"64","hashOfConfig":"39"},{"size":72,"mtime":1610379871880,"results":"65","hashOfConfig":"39"},{"size":915,"mtime":1610386449290,"results":"66","hashOfConfig":"39"},{"size":190,"mtime":1610386449298,"results":"67","hashOfConfig":"39"},{"size":3187,"mtime":1610386449290,"results":"68","hashOfConfig":"39"},{"size":1870,"mtime":1610321030719,"results":"69","hashOfConfig":"39"},{"size":2751,"mtime":1610321030720,"results":"70","hashOfConfig":"39"},{"size":1725,"mtime":1610386449294,"results":"71","hashOfConfig":"39"},{"size":2381,"mtime":1610321030728,"results":"72","hashOfConfig":"39"},{"size":6069,"mtime":1610321030730,"results":"73","hashOfConfig":"39"},{"size":613,"mtime":1610386449295,"results":"74","hashOfConfig":"39"},{"size":8983,"mtime":1610386449296,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"7pq7fh",{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"78"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"78"},"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/index.js",[],["163","164"],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/App.jsx",["165","166","167"],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/Map/Home.js",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/TableList.jsx",["168","169","170","171"],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/Dashboard.jsx",["172"],"/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from 'react';\n// import { Switch } from 'react-router-dom';\nimport { Grid, Row, Col } from 'react-bootstrap';\nimport { Card } from '../components/Card/Card';\nimport { StatsCard } from '../components/StatsCard/StatsCard.jsx';\n// import { style } from '../variables/Variables.jsx';\nimport Maps from './Maps';\nimport Table from './TableList';\n// import Sidebar from '../components/Sidebar/Sidebar';\n// import AdminNavbar from '../components/Navbars/AdminNavbar';\n// import Footer from '../components/Footer/Footer';\n// import routes from '../routes';\n\nconst Dashboard = ({ history }) => {\n  return (\n    <Grid fluid>\n      <Row>\n        <Col lg={3} sm={6}>\n          <StatsCard\n            bigIcon={<i className=\"pe-7s-drop text-info\" />}\n            statsText=\"Water\"\n            statsValue=\"10\"\n            statsIcon={<i className=\"fa fa-refresh\" />}\n            statsIconText=\"Updated now\"\n          />\n        </Col>\n        <Col lg={3} sm={6}>\n          <StatsCard\n            bigIcon={<i className=\"pe-7s-cart text-success\" />}\n            statsText=\"Food\"\n            statsValue=\"8\"\n            statsIcon={<i className=\"fa fa-refresh\" />}\n            statsIconText=\"Updated now\"\n          />\n        </Col>\n        <Col lg={3} sm={6}>\n          <StatsCard\n            bigIcon={<i className=\"pe-7s-notebook text-danger\" />}\n            statsText=\"Education\"\n            statsValue=\"3\"\n            statsIcon={<i className=\"fa fa-refresh\" />}\n            statsIconText=\"Updated now\"\n          />\n        </Col>\n        <Col lg={3} sm={6}>\n          <StatsCard\n            bigIcon={<i className=\"pe-7s-bandaid text-warning\" />}\n            statsText=\"Health\"\n            statsValue=\"5\"\n            statsIcon={<i className=\"fa fa-refresh\" />}\n            statsIconText=\"Updated now\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col md={6}>\n          <Card\n            statsIcon=\"fa fa-history\"\n            id=\"googleMap\"\n            title=\"Request Map\"\n            category=\"Displays Request by Location\"\n            stats=\"Updated 3 minutes ago\"\n            content={<Maps />}\n          />\n        </Col>\n      </Row>{' '}\n      {/* <Row>\n      <Col md={6}>\n        <Card\n          statsIcon=\"fa fa-history\"\n          id=\"twillio\"\n          title=\"Twillio\"\n          category=\"In App Messaging\"\n          stats=\"Updated 3 minutes ago\"\n          content={<Twillio />}\n        />\n      </Col>\n    </Row>{' '} */}\n      <Row>\n        <Col md={12}>\n          <Card\n            statsIcon=\"fa fa-clock-o\"\n            title=\"Assistance Requests\"\n            category=\"Displays All Requests for Assistance\"\n            stats=\"Campaign sent 2 days ago\"\n            content={<Table />}\n          />{' '}\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default Dashboard;\n","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/NGOProfile.jsx",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/pages/UserHome.jsx",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/pages/Profile.jsx",["173"],"import React, { useContext, useState } from 'react';\nimport { Grid, Image, Button } from 'react-bootstrap';\nimport wyncode from '../assets/img/tim_80x80.png';\nimport Navigation from '../components/UserNavigation';\nimport { AppContext } from '../context/AppContext';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport history from '../history';\n\nconst Profile = ({ history: { push } }) => {\n  const { currentUser, setCurrentUser, setLoading } = useContext(AppContext);\n\n  const [image, setImage] = useState(null);\n  const [preview, setPreview] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const avatar = new FormData();\n    avatar.append('avatar', image, image.name);\n\n    try {\n      const updatedUser = await axios({\n        method: 'POST',\n        url: '/api/users/avatar',\n        data: avatar,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setCurrentUser({ ...currentUser, avatar: updatedUser.data.secureURL });\n      swal('Sweet!', 'Your image has been updated!', 'success');\n    } catch (error) {\n      swal('Oops', 'Something went wrong.');\n    }\n  };\n\n  const handleImageSelect = (e) => {\n    setPreview(URL.createObjectURL(e.target.files[0]));\n    setImage(e.target.files[0]);\n  };\n\n  const handleDelete = async (e) => {\n    setLoading(true);\n    try {\n      const willDelete = await swal({\n        title: 'Are you sure?',\n        text: 'Once deleted, you will not be able to recover this account!',\n        icon: 'warning',\n        buttons: true,\n        dangerMode: true\n      });\n      if (willDelete) {\n        try {\n          await axios({\n            method: 'DELETE',\n            url: '/api/users',\n            withCredentials: true\n          });\n          swal('Poof!', 'Your account has been deleted.', { icon: 'success' });\n          setLoading(false);\n          sessionStorage.removeItem('user');\n          setCurrentUser(null);\n          push('/login');\n        } catch (error) {\n          swal('Oops!', 'Something went wrong.');\n        }\n      } else {\n        swal('Your account is safe!');\n      }\n    } catch (error) {\n      swal('Oops!', 'Something went wrong.');\n    }\n  };\n\n  return (\n    <>\n      <Navigation />\n      <Grid className=\"d-flex justify-content-center align-items-center flex-column\">\n        <h1 className=\"mt-4\">Your Profile</h1>\n        <div className=\"mt-4\">\n          <Image\n            src={\n              preview\n                ? preview\n                : currentUser?.avatar\n                ? currentUser.avatar\n                : wyncode\n            }\n            alt=\"profile-picture\"\n            width={250}\n            height={250}\n            roundedCircle\n          />\n        </div>\n        <div className=\"mt-4\">\n          <form className=\"d-flex flex-column\" onSubmit={handleSubmit}>\n            <input type=\"file\" accept=\"image/*\" onChange={handleImageSelect} />\n            <Button type=\"submit\" size=\"sm\" className=\"mt-4\">\n              Save Image\n            </Button>\n          </form>\n        </div>\n        <div className=\"d-flex flex-column align-items-center justify-content-center mt-4\">\n          <div className=\"d-flex \">\n            <label htmlFor=\"name\" className=\"pr-4 font-weight-bold\">\n              Name:\n            </label>\n            <p>{currentUser?.name}</p>\n          </div>\n          <div className=\"d-flex\">\n            <label htmlFor=\"email\" className=\"pr-4 font-weight-bold\">\n              Email:\n            </label>\n            <p>{currentUser?.email}</p>\n          </div>\n          <Button variant=\"danger\" onClick={handleDelete}>\n            Delete Account\n          </Button>\n        </div>\n      </Grid>\n    </>\n  );\n};\n\nexport default Profile;\n","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/pages/UpdatePassword.jsx",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/PrivateRoute.jsx",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/Maps.jsx",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/pages/ForgotPassword.jsx",["174"],"import React, { useState } from 'react';\nimport {\n  Grid,\n  Form,\n  Button,\n  FormGroup,\n  FormControl,\n  ControlLabel\n} from 'react-bootstrap';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport '../assets/css/forms.css';\n\nconst ForgotPassword = () => {\n  const [email, setEmail] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const form = e.target;\n    try {\n      const response = await axios.get(`/api/users/password?email=${email}`);\n      swal('Email sent.', 'Check your email to reset password.');\n      form.reset();\n    } catch (error) {\n      swal('Oops', 'Something went wrong');\n    }\n  };\n\n  return (\n    <Grid className=\"container d-flex flex-column align-items-center justify-content-center fullscreen\">\n      <Form onSubmit={handleSubmit} ClassName=\"auth-wrapper\">\n        <div className=\"auth-inner\">\n          <h3 className=\"mb-4\">Forgot Password</h3>\n          <FormGroup controlId=\"formBasicEmail\">\n            <ControlLabel>Email address</ControlLabel>\n            <FormControl\n              type=\"email\"\n              placeholder=\"Enter email\"\n              name=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              autoComplete=\"off\"\n            ></FormControl>\n          </FormGroup>\n          <FormGroup>\n            <Button type=\"submit\" variant=\"danger\">\n              Reset Password\n            </Button>\n          </FormGroup>\n        </div>\n      </Form>\n    </Grid>\n  );\n};\n\nexport default ForgotPassword;\n","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/pages/Home.jsx",["175"],"import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nfunction Home() {\n  return (\n    <div>\n      <h2>Resiliency Connection</h2>\n\n      <p>\n        Welcome to Resiliency Connection. We are glad you are here. Please let\n        us know if you are here because you are in need of assistance, or if you\n        are here to offer assistance to those in need.\n      </p>\n\n      <h4>\n        I need assistance in the form of Food, Water, Education and/or Health\n      </h4>\n      <Link className=\"btn btn-primary\" to=\"/usersignup\">\n        Click Me\n      </Link>\n      <h4>I am an NGO and can offer assistance</h4>\n      <Link className=\"btn btn-primary\" to=\"/ngosignup\">\n        Click Me\n      </Link>\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/pages/UserSignup.jsx",["176","177"],"import React, { useState, useContext, useEffect } from 'react';\nimport {\n  Grid,\n  Form,\n  FormGroup,\n  Radio,\n  ControlLabel,\n  FormControl\n} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../context/AppContext';\nimport axios from 'axios';\nimport Home from '../views/Map/Home';\nimport '../assets/css/forms.css';\n\nconst UserSignup = ({ history }) => {\n  const [formData, setFormData] = useState('');\n\n  const { setCurrentUser, userAddress } = useContext(AppContext);\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  useEffect(() => {\n    setFormData({\n      ...formData,\n      address: userAddress?.split(',')[0].trim(),\n      city: userAddress?.split(',')[1].trim(),\n      state: userAddress?.split(',')[3].trim(),\n      zip: userAddress?.split(',')[2].trim()\n    });\n  }, [userAddress]);\n\n  const handleSignUp = (e) => {\n    e.preventDefault();\n    console.log(formData);\n    axios\n      .post('/api/users', formData)\n      .then((res) => {\n        console.log(res.data);\n        sessionStorage.setItem('user', res.data);\n        setCurrentUser(res.data);\n        history.push('/userhome');\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <Grid className=\"container d-flex flex-column align-items-center justify-content-center fullscreen\">\n      <Form onSubmit={handleSignUp} className=\"auth-wrapper\">\n        <div className=\"auth-inner\">\n          <h3>User Registration</h3>\n          <p>\n            Our NGO partners are equipped to offer the following essential\n            services:\n          </p>\n          <FormGroup>\n            <p>Select a category below...</p>\n            <input\n              onChange={handleChange}\n              type=\"radio\"\n              id=\"water\"\n              name=\"aidType\"\n              value=\"water\"\n            />\n            <label for=\"water\">Water</label>\n            <br />\n            <input\n              onChange={handleChange}\n              type=\"radio\"\n              id=\"food\"\n              name=\"aidType\"\n              value=\"food\"\n            />\n            <label for=\"food\">Food</label>\n            <br />\n            <input\n              onChange={handleChange}\n              type=\"radio\"\n              id=\"education\"\n              name=\"aidType\"\n              value=\"education\"\n            />\n            <label for=\"education\">Childrens Education</label>\n            <br />\n            <input\n              onChange={handleChange}\n              type=\"radio\"\n              id=\"health\"\n              name=\"aidType\"\n              value=\"health services\"\n            />\n            <label for=\"heath\">Health Services</label>\n          </FormGroup>\n          <FormGroup>\n            <FormGroup controlId=\"formControlsTextarea\">\n              <ControlLabel>Briefly describe your need:</ControlLabel>\n              <FormControl\n                name=\"aidDesc\"\n                componentClass=\"textarea\"\n                placeholder=\"200 words\"\n                onChange={handleChange}\n              />\n            </FormGroup>\n            <div className=\"form-group\">\n              <label>File</label>\n              <input name=\"photo\" type=\"file\" onChange={handleChange} />\n              You may upload a photo to accompany your request.\n            </div>\n            <Home />\n            <div className=\"form-group\">\n              <label>First Name</label>\n              <input\n                type=\"text\"\n                name=\"firstName\"\n                className=\"form-control\"\n                placeholder=\"First Name\"\n                onChange={handleChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Last Name</label>\n              <input\n                name=\"lastName\"\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Last Name\"\n                onChange={handleChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Date of Birth (you must be 18+)</label>\n              <input\n                name=\"dob\"\n                type=\"date\"\n                className=\"form-control\"\n                placeholder=\"dob\"\n                onChange={handleChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Email address</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                className=\"form-control\"\n                placeholder=\"Enter email\"\n                onChange={handleChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Phone Number</label>\n              <input\n                type=\"text\"\n                name=\"phone\"\n                className=\"form-control\"\n                placeholder=\"Phone Number\"\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Address</label>\n              <input\n                type=\"text\"\n                name=\"address\"\n                className=\"form-control\"\n                placeholder=\"Your org's street address\"\n                defaultValue={userAddress?.split(',')[0]}\n                onChange={handleChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>City</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"City\"\n                defaultValue={userAddress?.split(',')[1]}\n                name=\"city\"\n                onChange={handleChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>State</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"State\"\n                defaultValue={userAddress?.split(',')[3]}\n                name=\"state\"\n                onChange={handleChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Zip Code</label>\n              <input\n                type=\"text\"\n                name=\"zip\"\n                className=\"form-control\"\n                placeholder=\"Zip Code\"\n                defaultValue={userAddress?.split(',')[2]}\n                onChange={handleChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Password</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                className=\"form-control\"\n                placeholder=\"Enter password\"\n                help=\"Password must be 8 characters\"\n                onChange={handleChange}\n              />\n            </div>\n          </FormGroup>\n\n          <Link\n            onClick={handleSignUp}\n            className=\"btn btn-primary btn-block\"\n            to=\"/login\"\n          >\n            Register\n          </Link>\n          <p className=\"forgot-password\">\n            Already registered? <Link to=\"/login\">Login</Link>\n          </p>\n        </div>\n      </Form>\n    </Grid>\n  );\n};\n\nexport default UserSignup;\n","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/pages/NGOSignup.jsx",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/pages/Login.jsx",["178"],"import React, { useState, useContext } from 'react';\nimport {\n  Grid,\n  Form,\n  FormGroup,\n  ControlLabel,\n  FormControl,\n  Button\n} from 'react-bootstrap';\nimport { AppContext } from '../context/AppContext';\nimport axios from 'axios';\nimport '../assets/css/forms.css';\n\nconst Login = ({ history }) => {\n  const [formData, setFormData] = useState(null);\n\n  const { setCurrentUser, currentUser } = useContext(AppContext);\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('/api/users/login', formData);\n      console.log(response.data);\n      setCurrentUser(response.data);\n      sessionStorage.setItem('user', response.data);\n      // history.push('/userhome');\n      if (response.data.admin === true) {\n        history.push('/dashboard');\n      } else {\n        history.push('/userhome');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Grid className=\"container d-flex flex-column align-items-center justify-content-center fullscreen\">\n      <Form onSubmit={handleLogin} className=\"auth-wrapper\">\n        <div className=\"auth-inner\">\n          <h3>Login</h3>\n          <FormGroup>\n            <ControlLabel htmlFor=\"email\">Email Address</ControlLabel>\n            <FormControl\n              id=\"email\"\n              type=\"email\"\n              placeholder=\"Email Address\"\n              name=\"email\"\n              onChange={handleChange}\n            />\n          </FormGroup>\n          <FormGroup>\n            <ControlLabel htmlFor=\"password\">Password</ControlLabel>\n            <FormControl\n              id=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Button type=\"submit\" className=\"btn btn-primary btn-block\">\n              Login\n            </Button>\n          </FormGroup>\n        </div>\n      </Form>\n    </Grid>\n  );\n};\n\nexport default Login;\n","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/context/AppContext.jsx",["179"],"import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AppContext = createContext();\n\nconst AppContextProvider = ({ children }) => {\n  const [userAddress, setUserAddress] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [requests, setRequests] = useState([]);\n  const [filteredRequests, setFilteredRequests] = useState([]);\n  const [search, setSearch] = useState('');\n  const [currentFilter, setCurrentFilter] = useState(null);\n  const [token, setToken] = useState('');\n\n  const [loading, setLoading] = useState(false);\n\n  const user = sessionStorage.getItem('user');\n  useEffect(() => {\n    const getToken = async () => {\n      const resp = await axios.get('/GoogleAPI');\n      setToken(resp.data);\n    };\n    try {\n      getToken();\n    } catch (error) {\n      console.log(error);\n    }\n  }, [setToken]);\n\n  useEffect(() => {\n    //incase the user refreshes & context is cleared\n    if (user && !currentUser) {\n      axios\n        .get('/api/users/me', { withCredentials: true })\n        .then((res) => setCurrentUser(res.data))\n        .catch((error) => console.log(error));\n    }\n  }, [currentUser, user]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        currentUser,\n        setCurrentUser,\n        loading,\n        setLoading,\n        requests,\n        setRequests,\n        filteredRequests,\n        setFilteredRequests,\n        search,\n        setSearch,\n        currentFilter,\n        setCurrentFilter,\n        userAddress,\n        setUserAddress\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport { AppContext, AppContextProvider };\n","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/Card/Card.jsx",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/FormInputs/FormInputs.jsx",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/variables/Variables.jsx",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/UserCard/UserCard.jsx",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/StatsCard/StatsCard.jsx",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/CustomButton/CustomButton.jsx",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/Map/Map.js",["180"],"import React, { Component } from 'react';\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  InfoWindow,\n  Marker\n} from 'react-google-maps';\nimport Geocode from 'react-geocode';\nimport Autocomplete from 'react-google-autocomplete';\nimport { GoogleMapsAPI } from './client-config';\nimport { AppContext } from '../../context/AppContext';\nGeocode.setApiKey(GoogleMapsAPI);\nGeocode.enableDebug();\n\nclass Map extends Component {\n  static contextType = AppContext;\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: '',\n      city: '',\n      area: '',\n      state: '',\n      mapPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      },\n      markerPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      }\n    };\n  }\n  /**\n   * Get the current address from the default map position and set those values in the state\n   */\n  componentDidMount() {\n    Geocode.fromLatLng(\n      this.state.mapPosition.lat,\n      this.state.mapPosition.lng\n    ).then(\n      (response) => {\n        const address = response.results[0].formatted_address,\n          addressArray = response.results[0].address_components,\n          city = this.getCity(addressArray),\n          area = this.getArea(addressArray),\n          state = this.getState(addressArray);\n\n        console.log('city', city, area, state);\n\n        this.setState({\n          address: address ? address : '',\n          area: area ? area : '',\n          city: city ? city : '',\n          state: state ? state : ''\n        });\n        this.context.setUserAddress(address);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n  /**\n   * Component should only update ( meaning re-render ), when the user selects the address, or drags the pin\n   *\n   * @param nextProps\n   * @param nextState\n   * @return {boolean}\n   */\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      this.state.markerPosition.lat !== this.props.center.lat ||\n      this.state.address !== nextState.address ||\n      this.state.city !== nextState.city ||\n      this.state.area !== nextState.area ||\n      this.state.state !== nextState.state\n    ) {\n      return true;\n    } else if (this.props.center.lat === nextProps.center.lat) {\n      return false;\n    }\n  }\n  /**\n   * Get the city and set the city input value to the one selected\n   *\n   * @param addressArray\n   * @return {string}\n   */\n  getCity = (addressArray) => {\n    let city = '';\n    for (let i = 0; i < addressArray.length; i++) {\n      if (\n        addressArray[i].types[0] &&\n        'administrative_area_level_2' === addressArray[i].types[0]\n      ) {\n        city = addressArray[i].long_name;\n        return city;\n      }\n    }\n  };\n  /**\n   * Get the area and set the area input value to the one selected\n   *\n   * @param addressArray\n   * @return {string}\n   */\n  getArea = (addressArray) => {\n    let area = '';\n    for (let i = 0; i < addressArray.length; i++) {\n      if (addressArray[i].types[0]) {\n        for (let j = 0; j < addressArray[i].types.length; j++) {\n          if (\n            'sublocality_level_1' === addressArray[i].types[j] ||\n            'locality' === addressArray[i].types[j]\n          ) {\n            area = addressArray[i].long_name;\n            return area;\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Get the address and set the address input value to the one selected\n   *\n   * @param addressArray\n   * @return {string}\n   */\n  getState = (addressArray) => {\n    let state = '';\n    for (let i = 0; i < addressArray.length; i++) {\n      for (let i = 0; i < addressArray.length; i++) {\n        if (\n          addressArray[i].types[0] &&\n          'administrative_area_level_1' === addressArray[i].types[0]\n        ) {\n          state = addressArray[i].long_name;\n          return state;\n        }\n      }\n    }\n  };\n  /**\n   * And function for city,state and address input\n   * @param event\n   */\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  /**\n   * This Event triggers when the marker window is closed\n   *\n   * @param event\n   */\n  onInfoWindowClose = (event) => {};\n\n  /**\n   * When the marker is dragged you get the lat and long using the functions available from event object.\n   * Use geocode to get the address, city, area and state from the lat and lng positions.\n   * And then set those values in the state.\n   *\n   * @param event\n   */\n  onMarkerDragEnd = (event) => {\n    let newLat = event.latLng.lat(),\n      newLng = event.latLng.lng();\n\n    Geocode.fromLatLng(newLat, newLng).then(\n      (response) => {\n        const address = response.results[0].formatted_address,\n          addressArray = response.results[0].address_components,\n          city = this.getCity(addressArray),\n          area = this.getArea(addressArray),\n          state = this.getState(addressArray);\n        this.setState({\n          address: address ? address : '',\n          area: area ? area : '',\n          city: city ? city : '',\n          state: state ? state : '',\n          markerPosition: {\n            lat: newLat,\n            lng: newLng\n          },\n          mapPosition: {\n            lat: newLat,\n            lng: newLng\n          }\n        });\n        this.context.setUserAddress(address);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  };\n\n  /**\n   * When the user types an address in the search box\n   * @param place\n   */\n  onPlaceSelected = (place) => {\n    console.log('plc', place);\n    const address = place.formatted_address,\n      addressArray = place.address_components,\n      city = this.getCity(addressArray),\n      area = this.getArea(addressArray),\n      state = this.getState(addressArray),\n      latValue = place.geometry.location.lat(),\n      lngValue = place.geometry.location.lng();\n    // Set these values in the state.\n    this.setState({\n      address: address ? address : '',\n      area: area ? area : '',\n      city: city ? city : '',\n      state: state ? state : '',\n      markerPosition: {\n        lat: latValue,\n        lng: lngValue\n      },\n      mapPosition: {\n        lat: latValue,\n        lng: lngValue\n      }\n    });\n    this.context.setUserAddress(address);\n  };\n\n  render() {\n    const AsyncMap = withScriptjs(\n      withGoogleMap((props) => (\n        <GoogleMap\n          google={this.props.google}\n          defaultZoom={this.props.zoom}\n          defaultCenter={{\n            lat: this.state.mapPosition.lat,\n            lng: this.state.mapPosition.lng\n          }}\n        >\n          {/* InfoWindow on top of marker */}\n          <InfoWindow\n            onClose={this.onInfoWindowClose}\n            position={{\n              lat: this.state.markerPosition.lat + 0.0018,\n              lng: this.state.markerPosition.lng\n            }}\n          >\n            <div>\n              <span style={{ padding: 0, margin: 0 }}>\n                {this.state.address}\n              </span>\n            </div>\n          </InfoWindow>\n          {/*Marker*/}\n          <Marker\n            google={this.props.google}\n            name={'Dolores park'}\n            draggable={true}\n            onDragEnd={this.onMarkerDragEnd}\n            position={{\n              lat: this.state.markerPosition.lat,\n              lng: this.state.markerPosition.lng\n            }}\n          />\n          <Marker />\n          {/* For Auto complete Search Box */}\n          {/* <Autocomplete\n            style={{\n              width: '100%',\n              height: '40px',\n              paddingLeft: '16px',\n              marginTop: '2px',\n              marginBottom: '500px'\n            }}\n            onPlaceSelected={this.onPlaceSelected}\n            types={['(regions)']}\n          /> */}\n        </GoogleMap>\n      ))\n    );\n    let map;\n    if (this.props.center.lat !== undefined) {\n      map = (\n        <div>\n          <div></div>\n\n          <AsyncMap\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${GoogleMapsAPI}&libraries=places`}\n            loadingElement={<div style={{ height: `100%` }} />}\n            containerElement={<div style={{ height: this.props.height }} />}\n            mapElement={<div style={{ height: `100%`, width: '100%' }} />}\n          />\n        </div>\n      );\n    } else {\n      map = <div style={{ height: this.props.height }} />;\n    }\n    return map;\n  }\n}\nexport default Map;\n","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/history.js",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/UserNavigation.jsx",["181","182","183","184","185"],"import React from 'react';\nimport { Navbar, Nav, NavDropdown, NavItem, MenuItem } from 'react-bootstrap';\nimport Logout from './Logout';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/img/res_logo.png';\nconst UserNavigation = () => {\n  return (\n    <nav\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        width: '100vw',\n        height: '10rem',\n        backgroundColor: 'blue',\n        color: 'white',\n        padding: '1rem'\n      }}\n    >\n      <div>\n        <img\n          src={logo}\n          alt=\"logo\"\n          style={{ width: '8rem', borderRadius: '25px' }}\n        />\n      </div>\n      <div>\n        <Link to=\"/callpage\">Call Us</Link>\n        <Logout />\n      </div>\n    </nav>\n  );\n};\n\nexport default UserNavigation;\n","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/Map/client-config.js",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/Logout.jsx",["186"],"import React, { useContext } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { AppContext } from '../context/AppContext';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport history from '../history';\n\nconst Logout = () => {\n  const { setCurrentUser } = useContext(AppContext);\n  const { push } = useHistory();\n\n  const handleSignOut = async () => {\n    try {\n      const response = await axios({\n        method: 'POST',\n        url: '/api/users/logout',\n        withCredentials: true\n      });\n      sessionStorage.removeItem('user');\n      setCurrentUser(null);\n      swal(response.data.message, 'You have signed out!', 'success').then(() =>\n        push('/login')\n      );\n    } catch (error) {\n      swal('Oops!', 'Something went wrong.');\n    }\n  };\n  return <Button onClick={handleSignOut}>Logout</Button>;\n};\n\nexport default Logout;\n","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/Twilio.jsx",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/Sidebar/Sidebar.jsx",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/Navbars/AdminNavbar.jsx",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/components/Navbars/AdminNavbarLinks.jsx",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/routes.js",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/Icons.jsx",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/Typography.jsx",[],"/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/Map/Home2.js",["187"],"import React, { Component, useEffect, useState } from 'react';\nimport Map2 from './Map2';\n\nconst Home = () => {\n  const [users, setUsers] = useState(null);\n  useEffect(() => {\n    fetch('/api/users/all')\n      .then((data) => {\n        return data.json();\n      })\n      .then((res) => {\n        setUsers(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  return (\n    <div style={{ margin: '100px' }}>\n      <Map2\n        users={users}\n        center={{ lat: 18.2208, lng: -66.5901 }}\n        height=\"300px\"\n        zoom={15}\n      />\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/leo/Desktop/repos/wyncode/cohorts/c40_finals/C40_resiliency/client/src/views/Map/Map2.js",["188","189"],"import React, { Component } from 'react';\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  InfoWindow,\n  Marker\n} from 'react-google-maps';\nimport Geocode from 'react-geocode';\nimport Autocomplete from 'react-google-autocomplete';\nimport { GoogleMapsAPI } from './client-config';\nimport { AppContext } from '../../context/AppContext';\nGeocode.setApiKey(GoogleMapsAPI);\nGeocode.enableDebug();\n\nclass Map extends Component {\n  static contextType = AppContext;\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      address: '',\n      city: '',\n      area: '',\n      state: '',\n      mapPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      },\n      markerPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      }\n    };\n  }\n  /**\n   * Get the current address from the default map position and set those values in the state\n   */\n  componentDidMount() {\n    Geocode.fromLatLng(\n      this.state.mapPosition.lat,\n      this.state.mapPosition.lng\n    ).then(\n      (response) => {\n        const address = response.results[0].formatted_address,\n          addressArray = response.results[0].address_components,\n          city = this.getCity(addressArray),\n          area = this.getArea(addressArray),\n          state = this.getState(addressArray);\n\n        console.log('city', city, area, state);\n\n        this.setState({\n          address: address ? address : '',\n          area: area ? area : '',\n          city: city ? city : '',\n          state: state ? state : ''\n        });\n        this.context.setUserAddress(address);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n  /**\n   * Component should only update ( meaning re-render ), when the user selects the address, or drags the pin\n   *\n   * @param nextProps\n   * @param nextState\n   * @return {boolean}\n   */\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      this.state.markerPosition.lat !== this.props.center.lat ||\n      this.state.address !== nextState.address ||\n      this.state.city !== nextState.city ||\n      this.state.area !== nextState.area ||\n      this.state.state !== nextState.state\n    ) {\n      return true;\n    } else if (this.props.center.lat === nextProps.center.lat) {\n      return false;\n    }\n  }\n  /**\n   * Get the city and set the city input value to the one selected\n   *\n   * @param addressArray\n   * @return {string}\n   */\n  getCity = (addressArray) => {\n    let city = '';\n    for (let i = 0; i < addressArray.length; i++) {\n      if (\n        addressArray[i].types[0] &&\n        'administrative_area_level_2' === addressArray[i].types[0]\n      ) {\n        city = addressArray[i].long_name;\n        return city;\n      }\n    }\n  };\n  /**\n   * Get the area and set the area input value to the one selected\n   *\n   * @param addressArray\n   * @return {string}\n   */\n  getArea = (addressArray) => {\n    let area = '';\n    for (let i = 0; i < addressArray.length; i++) {\n      if (addressArray[i].types[0]) {\n        for (let j = 0; j < addressArray[i].types.length; j++) {\n          if (\n            'sublocality_level_1' === addressArray[i].types[j] ||\n            'locality' === addressArray[i].types[j]\n          ) {\n            area = addressArray[i].long_name;\n            return area;\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Get the address and set the address input value to the one selected\n   *\n   * @param addressArray\n   * @return {string}\n   */\n  getState = (addressArray) => {\n    let state = '';\n    for (let i = 0; i < addressArray.length; i++) {\n      for (let i = 0; i < addressArray.length; i++) {\n        if (\n          addressArray[i].types[0] &&\n          'administrative_area_level_1' === addressArray[i].types[0]\n        ) {\n          state = addressArray[i].long_name;\n          return state;\n        }\n      }\n    }\n  };\n  /**\n   * And function for city,state and address input\n   * @param event\n   */\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  /**\n   * This Event triggers when the marker window is closed\n   *\n   * @param event\n   */\n  onInfoWindowClose = (event) => {};\n\n  /**\n   * When the marker is dragged you get the lat and long using the functions available from event object.\n   * Use geocode to get the address, city, area and state from the lat and lng positions.\n   * And then set those values in the state.\n   *\n   * @param event\n   */\n  onMarkerDragEnd = (event) => {\n    let newLat = event.latLng.lat(),\n      newLng = event.latLng.lng();\n\n    Geocode.fromLatLng(newLat, newLng).then(\n      (response) => {\n        const address = response.results[0].formatted_address,\n          addressArray = response.results[0].address_components,\n          city = this.getCity(addressArray),\n          area = this.getArea(addressArray),\n          state = this.getState(addressArray);\n        this.setState({\n          address: address ? address : '',\n          area: area ? area : '',\n          city: city ? city : '',\n          state: state ? state : '',\n          markerPosition: {\n            lat: newLat,\n            lng: newLng\n          },\n          mapPosition: {\n            lat: newLat,\n            lng: newLng\n          }\n        });\n        this.context.setUserAddress(address);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  };\n\n  /**\n   * When the user types an address in the search box\n   * @param place\n   */\n  onPlaceSelected = (place) => {\n    console.log('plc', place);\n    const address = place.formatted_address,\n      addressArray = place.address_components,\n      city = this.getCity(addressArray),\n      area = this.getArea(addressArray),\n      state = this.getState(addressArray),\n      latValue = place.geometry.location.lat(),\n      lngValue = place.geometry.location.lng();\n    // Set these values in the state.\n    this.setState({\n      address: address ? address : '',\n      area: area ? area : '',\n      city: city ? city : '',\n      state: state ? state : '',\n      markerPosition: {\n        lat: latValue,\n        lng: lngValue\n      },\n      mapPosition: {\n        lat: latValue,\n        lng: lngValue\n      }\n    });\n    this.context.setUserAddress(address);\n  };\n\n  render() {\n    console.log(this.props.users);\n    const AsyncMap = withScriptjs(\n      withGoogleMap((props) => (\n        <GoogleMap\n          google={this.props.google}\n          defaultZoom={this.props.zoom}\n          defaultCenter={{\n            lat: this.state.mapPosition.lat,\n            lng: this.state.mapPosition.lng\n          }}\n        >\n          {/* InfoWindow on top of marker */}\n          <InfoWindow\n            onClose={this.onInfoWindowClose}\n            position={{\n              lat: this.state.markerPosition.lat + 0.0018,\n              lng: this.state.markerPosition.lng\n            }}\n          >\n            <div>\n              <span style={{ padding: 0, margin: 0 }}>\n                {this.state.address}\n              </span>\n            </div>\n          </InfoWindow>\n          {/*Marker*/}\n          <Marker\n            google={this.props.google}\n            name={'Dolores park'}\n            draggable={true}\n            onDragEnd={this.onMarkerDragEnd}\n            position={{\n              lat: this.state.markerPosition.lat,\n              lng: this.state.markerPosition.lng\n            }}\n          />\n          {this.props.users &&\n            this.props.users.map((user) => {\n              if (user.latitude) {\n                return (\n                  <Marker\n                    key={user._id}\n                    name={'Dolores park'}\n                    draggable={true}\n                    onDragEnd={this.onMarkerDragEnd}\n                    position={{\n                      lat: user.latitude,\n                      lng: user.longitude\n                    }}\n                  />\n                );\n              }\n            })}\n\n          {/* For Auto complete Search Box */}\n          {/* <Autocomplete\n            style={{\n              width: '100%',\n              height: '40px',\n              paddingLeft: '16px',\n              marginTop: '2px',\n              marginBottom: '500px'\n            }}\n            onPlaceSelected={this.onPlaceSelected}\n            types={['(regions)']}\n          /> */}\n        </GoogleMap>\n      ))\n    );\n    let map;\n    if (this.props.center.lat !== undefined) {\n      map = (\n        <div>\n          <div></div>\n\n          <AsyncMap\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${GoogleMapsAPI}&libraries=places`}\n            loadingElement={<div style={{ height: `100%` }} />}\n            containerElement={<div style={{ height: this.props.height }} />}\n            mapElement={<div style={{ height: `100%`, width: '100%' }} />}\n          />\n        </div>\n      );\n    } else {\n      map = <div style={{ height: this.props.height }} />;\n    }\n    console.log(this.props.users);\n\n    return map;\n  }\n}\nexport default Map;\n",{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":13,"column":8,"nodeType":"196","messageId":"197","endLine":13,"endColumn":20},{"ruleId":"194","severity":1,"message":"198","line":18,"column":8,"nodeType":"196","messageId":"197","endLine":18,"endColumn":15},{"ruleId":"194","severity":1,"message":"199","line":19,"column":8,"nodeType":"196","messageId":"197","endLine":19,"endColumn":19},{"ruleId":"194","severity":1,"message":"200","line":18,"column":17,"nodeType":"196","messageId":"197","endLine":18,"endColumn":26},{"ruleId":"194","severity":1,"message":"199","line":21,"column":8,"nodeType":"196","messageId":"197","endLine":21,"endColumn":19},{"ruleId":"194","severity":1,"message":"201","line":25,"column":10,"nodeType":"196","messageId":"197","endLine":25,"endColumn":17},{"ruleId":"194","severity":1,"message":"202","line":25,"column":19,"nodeType":"196","messageId":"197","endLine":25,"endColumn":26},{"ruleId":"194","severity":1,"message":"203","line":24,"column":8,"nodeType":"196","messageId":"197","endLine":24,"endColumn":12},{"ruleId":"194","severity":1,"message":"204","line":8,"column":8,"nodeType":"196","messageId":"197","endLine":8,"endColumn":15},{"ruleId":"194","severity":1,"message":"205","line":21,"column":13,"nodeType":"196","messageId":"197","endLine":21,"endColumn":21},{"ruleId":"194","severity":1,"message":"206","line":2,"column":10,"nodeType":"196","messageId":"197","endLine":2,"endColumn":16},{"ruleId":"194","severity":1,"message":"207","line":6,"column":3,"nodeType":"196","messageId":"197","endLine":6,"endColumn":8},{"ruleId":"208","severity":1,"message":"209","line":32,"column":6,"nodeType":"210","endLine":32,"endColumn":19,"suggestions":"211"},{"ruleId":"194","severity":1,"message":"212","line":17,"column":27,"nodeType":"196","messageId":"197","endLine":17,"endColumn":38},{"ruleId":"194","severity":1,"message":"213","line":13,"column":10,"nodeType":"196","messageId":"197","endLine":13,"endColumn":15},{"ruleId":"194","severity":1,"message":"214","line":10,"column":8,"nodeType":"196","messageId":"197","endLine":10,"endColumn":20},{"ruleId":"194","severity":1,"message":"215","line":2,"column":10,"nodeType":"196","messageId":"197","endLine":2,"endColumn":16},{"ruleId":"194","severity":1,"message":"216","line":2,"column":18,"nodeType":"196","messageId":"197","endLine":2,"endColumn":21},{"ruleId":"194","severity":1,"message":"217","line":2,"column":23,"nodeType":"196","messageId":"197","endLine":2,"endColumn":34},{"ruleId":"194","severity":1,"message":"218","line":2,"column":36,"nodeType":"196","messageId":"197","endLine":2,"endColumn":43},{"ruleId":"194","severity":1,"message":"219","line":2,"column":45,"nodeType":"196","messageId":"197","endLine":2,"endColumn":53},{"ruleId":"194","severity":1,"message":"204","line":7,"column":8,"nodeType":"196","messageId":"197","endLine":7,"endColumn":15},{"ruleId":"194","severity":1,"message":"200","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":26},{"ruleId":"194","severity":1,"message":"214","line":10,"column":8,"nodeType":"196","messageId":"197","endLine":10,"endColumn":20},{"ruleId":"220","severity":1,"message":"221","line":269,"column":41,"nodeType":"222","messageId":"223","endLine":269,"endColumn":43},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'PrivateRoute' is defined but never used.","Identifier","unusedVar","'Sidebar' is defined but never used.","'AdminNavbar' is defined but never used.","'Component' is defined but never used.","'thArray' is defined but never used.","'tdArray' is defined but never used.","'Maps' is defined but never used.","'history' is defined but never used.","'response' is assigned a value but never used.","'Button' is defined but never used.","'Radio' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["226"],"'currentUser' is assigned a value but never used.","'token' is assigned a value but never used.","'Autocomplete' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","'NavItem' is defined but never used.","'MenuItem' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},"Update the dependencies array to be: [formData, userAddress]",{"range":"229","text":"230"},[878,891],"[formData, userAddress]"]